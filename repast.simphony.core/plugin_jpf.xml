<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE plugin PUBLIC "-//JPF//Java Plug-in Manifest 0.6" "http://jpf.sourceforge.net/plugin_0_6.dtd">
<plugin id="repast.simphony.core" version="">
	<attributes>
		<attribute id="simphony" value="2.8.0"/>
	</attributes>

	<requires>
		<import exported="false" match="compatible" optional="false" plugin-id="saf.core.runtime" reverse-lookup="false"/>
	</requires>


	<runtime>
		<library id="rsc" path="bin/" type="code">
			<export prefix="*"/>
		</library>

		<!-- this is very important as it makes the model code available to dependent 
			plugins <library id="rsc.models" path="../repast.simphony.test.models/repast.simphony.test.models.jar" 
			type="code"> <export prefix="*"/> </library> -->

		<!-- <library type="resources" path="icons/" id="icons"/> <library type="resources" 
			path="help/" id="help"/> -->
		<library id="cglib-nodep-2.2.3" path="./lib/cglib-nodep-2.2.3.jar" type="code"/>
		<library id="collections-generic-4.01" path="./lib/collections-generic-4.01.jar" type="code"/>
		<library id="colt-1.2.0-no_hep" path="./lib/colt-1.2.0-no_hep.jar" type="code"/>
		<library id="commons-collections" path="./lib/commons-collections-3.2.2.jar" type="code"/>
		<library id="commons-lang3-3.1" path="./lib/commons-lang3-3.1.jar" type="code"/>
		<library id="commons-math3-3.6.1" path="./lib/commons-math3-3.6.1.jar" type="code"/>
		<library id="commons-io-2.5" path="./lib/commons-io-2.5.jar" type="code"/>
		<library id="concurrent-1.3.4" path="./lib/concurrent-1.3.4.jar" type="code"/>
		<library id="dom4j-1.6.1" path="./lib/dom4j-1.6.1.jar" type="code"/>
		<library id="hsqldb-2.3.2" path="./lib/hsqldb-2.3.2.jar" type="code"/>
		<library id="jbullet" path="./lib/jbullet.jar" type="code"/>
		<library id="jscience" path="./lib/jscience-4.3.1-no_ogis.jar" type="code"/>
		<library id="jung-algorithms-2.0.1" path="./lib/jung-algorithms-2.0.1.jar" type="code"/>
		<library id="jung-api-2.0.1" path="./lib/jung-api-2.0.1.jar" type="code"/>
		<library id="jung-graph-impl-2.0.1" path="./lib/jung-graph-impl-2.0.1.jar" type="code"/>
		<library id="jung-io-2.0.1" path="./lib/jung-io-2.0.1.jar" type="code"/>
		<library id="opencsv-2.3" path="./lib/opencsv-2.3.jar" type="code"/>
		<library id="poi-3.9-20121203" path="./lib/poi-3.9-20121203.jar" type="code"/>
		<library id="poi-ooxml-3.9-20121203" path="./lib/poi-ooxml-3.9-20121203.jar" type="code"/>
		<library id="stack-alloc" path="./lib/stack-alloc.jar" type="code"/>
		<library id="ooxml-schemas-1.1" path="./lib/ooxml-schemas-1.1.jar" type="code"/>
		<library id="velocity-1.4" path="./lib/velocity-1.4.jar" type="code"/>
		<library id="xmlbeans-2.3.0" path="./lib/xmlbeans-2.3.0.jar" type="code"/>

	</runtime>

	<!-- defines a parent / composite action. This action will become a child 
		of the root action. The creator class must implement the repast.simphony.plugin.CompositeControllerActionCreator 
		interface. -->
	<extension-point extension-multiplicity="any" id="composite.action">
		<parameter-def id="creatorClass" multiplicity="one" type="string"/>
	</extension-point>

	<!-- defines how a child / component action is saved and loaded. actionIO 
		must implement repast.simphony.scenario.ControllerActionIO. -->
	<extension-point extension-multiplicity="any" id="component.action">
		<parameter-def id="actionIO" multiplicity="one" type="string"/>
		<parameter-def id="parentID" multiplicity="one" type="string"/>
	</extension-point>

</plugin>
